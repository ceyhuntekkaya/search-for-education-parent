
create table brands
(
    founded_year     integer,
    is_active        boolean,
    rating_average   double precision,
    created_at       timestamp(6),
    created_by       bigint,
    id               bigint generated by default as identity
        primary key,
    rating_count     bigint,
    updated_at       timestamp(6),
    updated_by       bigint,
    view_count       bigint,
    cover_image_url  varchar(255),
    description      text,
    email            varchar(255),
    facebook_url     varchar(255),
    instagram_url    varchar(255),
    linkedin_url     varchar(255),
    logo_url         varchar(255),
    meta_description text,
    meta_keywords    varchar(255),
    meta_title       varchar(255),
    name             varchar(255) not null,
    phone            varchar(255),
    slug             varchar(255) not null
        unique,
    twitter_url      varchar(255),
    website_url      varchar(255),
    youtube_url      varchar(255)
);

alter table brands
    owner to genixo;

create table countries
(
    currency_code   varchar(3),
    is_active       boolean,
    is_supported    boolean,
    iso_code_2      varchar(2)   not null
        unique,
    iso_code_3      varchar(3)   not null
        unique,
    latitude        double precision,
    longitude       double precision,
    sort_order      integer,
    created_at      timestamp(6),
    created_by      bigint,
    id              bigint generated by default as identity
        primary key,
    updated_at      timestamp(6),
    updated_by      bigint,
    currency_symbol varchar(255),
    flag_emoji      varchar(255),
    name            varchar(255) not null,
    name_en         varchar(255) not null,
    phone_code      varchar(255),
    timezone        varchar(255)
);

alter table countries
    owner to genixo;

create table coupons
(
    discount_value      numeric(38, 2),
    is_active           boolean,
    is_public           boolean,
    max_discount_amount numeric(38, 2),
    min_order_amount    numeric(38, 2),
    usage_count         integer,
    usage_limit         integer,
    user_usage_limit    integer,
    created_at          timestamp(6),
    created_by          bigint,
    id                  bigint generated by default as identity
        primary key,
    updated_at          timestamp(6),
    updated_by          bigint,
    valid_from          timestamp(6),
    valid_until         timestamp(6),
    applicable_plans    varchar(255),
    code                varchar(255),
    description         varchar(255),
    discount_type       varchar(255),
    name                varchar(255),
    terms               varchar(255),
    applicable_plan_ids bigint[]
);

alter table coupons
    owner to genixo;

create table institution_types
(
    is_active          boolean,
    sort_order         integer,
    created_at         timestamp(6),
    created_by         bigint,
    id                 bigint generated by default as identity
        primary key,
    updated_at         timestamp(6),
    updated_by         bigint,
    color_code         varchar(255),
    default_properties json,
    description        text,
    display_name       varchar(255) not null,
    icon_url           varchar(255),
    name               varchar(255) not null
        unique
);

alter table institution_types
    owner to genixo;

create table institution_properties
(
    is_active           boolean,
    is_filterable       boolean,
    is_required         boolean,
    is_searchable       boolean,
    max_length          integer,
    max_value           double precision,
    min_length          integer,
    min_value           double precision,
    show_in_card        boolean,
    show_in_profile     boolean,
    sort_order          integer,
    created_at          timestamp(6),
    created_by          bigint,
    id                  bigint generated by default as identity
        primary key,
    institution_type_id bigint       not null
        constraint fkawtg3w477r2aplhflh9heuxn0
            references institution_types,
    updated_at          timestamp(6),
    updated_by          bigint,
    data_type           varchar(255) not null
        constraint institution_properties_data_type_check
            check ((data_type)::text = ANY
                   ((ARRAY ['TEXT'::character varying, 'TEXTAREA'::character varying, 'NUMBER'::character varying, 'DECIMAL'::character varying, 'BOOLEAN'::character varying, 'SELECT'::character varying, 'MULTISELECT'::character varying, 'DATE'::character varying, 'TIME'::character varying, 'DATETIME'::character varying, 'URL'::character varying, 'EMAIL'::character varying, 'PHONE'::character varying, 'FILE'::character varying, 'IMAGE'::character varying])::text[])),
    default_value       varchar(255),
    description         varchar(255),
    display_name        varchar(255) not null,
    name                varchar(255) not null,
    options             json,
    regex_pattern       varchar(255)
);

alter table institution_properties
    owner to genixo;

create table performance_metrics
(
    cache_hit               boolean,
    cache_ttl_seconds       integer,
    conversion_event        boolean,
    cpu_time_ms             integer,
    cpu_usage_percentage    double precision,
    db_connection_time_ms   integer,
    db_query_count          integer,
    db_query_time_ms        integer,
    external_api_calls      integer,
    external_api_errors     integer,
    external_api_time_ms    integer,
    file_io_time_ms         integer,
    file_read_count         integer,
    file_write_count        integer,
    gzip_enabled            boolean,
    http_status_code        integer,
    is_active               boolean,
    keep_alive              boolean,
    memory_total_mb         double precision,
    memory_usage_percentage double precision,
    memory_used_mb          double precision,
    network_latency_ms      integer,
    response_time_ms        integer      not null,
    success                 boolean,
    threshold_exceeded      boolean,
    threshold_value         double precision,
    bytes_received          bigint,
    bytes_sent              bigint,
    created_at              timestamp(6),
    created_by              bigint,
    id                      bigint generated by default as identity
        primary key,
    request_size_bytes      bigint,
    response_size_bytes     bigint,
    timestamp               timestamp(6) not null,
    updated_at              timestamp(6),
    updated_by              bigint,
    user_id                 bigint,
    additional_metrics      json,
    application_version     varchar(255),
    business_operation      varchar(255),
    cache_key               varchar(255),
    endpoint_url            varchar(255),
    error_message           varchar(255),
    error_stack_trace       text,
    feature_name            varchar(255),
    http_method             varchar(255),
    ip_address              varchar(255),
    jvm_version             varchar(255),
    metric_category         varchar(255) not null
        constraint performance_metrics_metric_category_check
            check ((metric_category)::text = ANY
                   ((ARRAY ['WEB_REQUEST'::character varying, 'DATABASE'::character varying, 'CACHE'::character varying, 'FILE_SYSTEM'::character varying, 'NETWORK'::character varying, 'MEMORY'::character varying, 'CPU'::character varying, 'EXTERNAL_API'::character varying, 'BACKGROUND_JOB'::character varying, 'SYSTEM'::character varying, 'APPLICATION'::character varying, 'SECURITY'::character varying, 'SEARCH'::character varying, 'UPLOAD'::character varying, 'EMAIL'::character varying, 'SMS'::character varying, 'PAYMENT'::character varying, 'BUSINESS_LOGIC'::character varying])::text[])),
    server_instance         varchar(255),
    server_name             varchar(255),
    session_id              varchar(255),
    threshold_type          varchar(255),
    user_agent              varchar(255)
);

alter table performance_metrics
    owner to genixo;

create table provinces
(
    area_km2           double precision,
    education_index    double precision,
    elevation_m        integer,
    gdp_per_capita     double precision,
    has_airport        boolean,
    has_metro          boolean,
    has_university     boolean,
    is_active          boolean,
    is_metropolitan    boolean,
    latitude           double precision,
    literacy_rate      double precision,
    longitude          double precision,
    sort_order         integer,
    unemployment_rate  double precision,
    country_id         bigint       not null
        constraint fk48p9qkti5auert2gquvn76338
            references countries,
    created_at         timestamp(6),
    created_by         bigint,
    id                 bigint generated by default as identity
        primary key,
    population         bigint,
    school_count       bigint,
    student_count      bigint,
    teacher_count      bigint,
    updated_at         timestamp(6),
    updated_by         bigint,
    area_code          varchar(255),
    code               varchar(255) not null,
    description        text,
    meta_description   text,
    meta_title         varchar(255),
    name               varchar(255) not null,
    name_en            varchar(255),
    plate_code         varchar(255),
    postal_code_prefix varchar(255),
    region             varchar(255),
    slug               varchar(255)
        unique,
    time_zone          varchar(255),
    traffic_density    varchar(255)
);

alter table provinces
    owner to genixo;

create table districts
(
    air_quality_index             double precision,
    annual_rainfall_mm            double precision,
    area_km2                      double precision,
    average_family_size           double precision,
    average_income                double precision,
    average_temperature           double precision,
    birth_rate                    double precision,
    cost_of_living_index          double precision,
    cultural_center_count         integer,
    density_per_km2               double precision,
    distance_to_airport_km        double precision,
    distance_to_city_center_km    double precision,
    education_quality_index       double precision,
    elderly_population_percentage double precision,
    elevation_m                   integer,
    has_bus_terminal              boolean,
    has_metro_station             boolean,
    has_train_station             boolean,
    hospital_count                integer,
    humidity_percentage           double precision,
    is_active                     boolean,
    is_central                    boolean,
    is_coastal                    boolean,
    latitude                      double precision,
    literacy_rate                 double precision,
    longitude                     double precision,
    park_count                    integer,
    property_price_index          double precision,
    public_transport_score        integer,
    safety_index                  double precision,
    shopping_mall_count           integer,
    sort_order                    integer,
    sports_facility_count         integer,
    youth_population_percentage   double precision,
    created_at                    timestamp(6),
    created_by                    bigint,
    id                            bigint generated by default as identity
        primary key,
    population                    bigint,
    private_school_count          bigint,
    province_id                   bigint       not null
        constraint fk82doq1t64jhly7a546lpvnu2c
            references provinces,
    public_school_count           bigint,
    school_count                  bigint,
    university_count              bigint,
    updated_at                    timestamp(6),
    updated_by                    bigint,
    climate_type                  varchar(255),
    code                          varchar(255),
    description                   text,
    district_type                 varchar(255) not null
        constraint districts_district_type_check
            check ((district_type)::text = ANY
                   ((ARRAY ['MERKEZ'::character varying, 'ILCE'::character varying, 'BELDE'::character varying, 'BUCAK'::character varying, 'KASABA'::character varying, 'TOWN'::character varying, 'BOROUGH'::character varying, 'SUBURB'::character varying])::text[])),
    meta_description              text,
    meta_title                    varchar(255),
    name                          varchar(255) not null,
    name_en                       varchar(255),
    noise_level                   varchar(255),
    postal_code                   varchar(255),
    slug                          varchar(255)
        unique,
    socioeconomic_level           varchar(255)
        constraint districts_socioeconomic_level_check
            check ((socioeconomic_level)::text = ANY
                   ((ARRAY ['VERY_LOW'::character varying, 'LOW'::character varying, 'LOWER_MIDDLE'::character varying, 'MIDDLE'::character varying, 'UPPER_MIDDLE'::character varying, 'HIGH'::character varying, 'VERY_HIGH'::character varying])::text[])),
    traffic_congestion_level      varchar(255)
);

alter table districts
    owner to genixo;

create table neighborhoods
(
    air_quality_score                     integer,
    area_km2                              double precision,
    average_age                           double precision,
    average_property_price                double precision,
    average_rent_price                    double precision,
    bank_count                            integer,
    bus_accessibility_minutes             integer,
    cafe_count                            integer,
    cleanliness_score                     integer,
    commute_to_business_districts_minutes integer,
    density_per_km2                       double precision,
    education_accessibility_score         integer,
    elderly_percentage                    double precision,
    elevation_m                           integer,
    family_friendliness_score             integer,
    family_with_children_percentage       double precision,
    green_space_percentage                double precision,
    has_cultural_center                   boolean,
    has_hospital                          boolean,
    has_kindergarten                      boolean,
    has_library                           boolean,
    has_metro_station                     boolean,
    has_park                              boolean,
    has_shopping_center                   boolean,
    has_sports_facility                   boolean,
    highway_accessibility_minutes         integer,
    investment_attractiveness             integer,
    is_active                             boolean,
    is_commercial_center                  boolean,
    is_gated_community                    boolean,
    is_historical                         boolean,
    is_industrial                         boolean,
    is_residential                        boolean,
    latitude                              double precision,
    longitude                             double precision,
    main_road_accessibility_minutes       integer,
    metro_accessibility_minutes           integer,
    pharmacy_count                        integer,
    property_price_per_m2                 double precision,
    public_transport_frequency            integer,
    restaurant_count                      integer,
    safety_score                          integer,
    school_preference_score               integer,
    school_quality_index                  double precision,
    social_life_score                     integer,
    sort_order                            integer,
    student_percentage                    double precision,
    supermarket_count                     integer,
    walkability_score                     integer,
    young_professional_percentage         double precision,
    created_at                            timestamp(6),
    created_by                            bigint,
    district_id                           bigint       not null
        constraint fk92vr05sn45v7nuyh4bjnmvuys
            references districts,
    id                                    bigint generated by default as identity
        primary key,
    population                            bigint,
    preschool_count                       bigint,
    private_school_count                  bigint,
    public_school_count                   bigint,
    school_count                          bigint,
    updated_at                            timestamp(6),
    updated_by                            bigint,
    code                                  varchar(255),
    description                           text,
    development_level                     varchar(255)
        constraint neighborhoods_development_level_check
            check ((development_level)::text = ANY
                   ((ARRAY ['UNDER_DEVELOPMENT'::character varying, 'DEVELOPING'::character varying, 'DEVELOPED'::character varying, 'MATURE'::character varying, 'LUXURY'::character varying, 'PREMIUM'::character varying, 'TRADITIONAL'::character varying, 'MODERN'::character varying, 'MIXED_DEVELOPMENT'::character varying])::text[])),
    development_potential                 varchar(255),
    housing_type                          varchar(255)
        constraint neighborhoods_housing_type_check
            check ((housing_type)::text = ANY
                   ((ARRAY ['MIXED'::character varying, 'APARTMENT'::character varying, 'VILLA'::character varying, 'TOWNHOUSE'::character varying, 'GATED_COMMUNITY'::character varying, 'SOCIAL_HOUSING'::character varying, 'HISTORICAL'::character varying, 'COMMERCIAL'::character varying, 'INDUSTRIAL'::character varying, 'RURAL'::character varying])::text[])),
    income_level                          varchar(255)
        constraint neighborhoods_income_level_check
            check ((income_level)::text = ANY
                   ((ARRAY ['VERY_LOW'::character varying, 'LOW'::character varying, 'LOWER_MIDDLE'::character varying, 'MIDDLE'::character varying, 'UPPER_MIDDLE'::character varying, 'HIGH'::character varying, 'VERY_HIGH'::character varying, 'LUXURY'::character varying])::text[])),
    name                                  varchar(255) not null,
    name_en                               varchar(255),
    neighborhood_type                     varchar(255) not null
        constraint neighborhoods_neighborhood_type_check
            check ((neighborhood_type)::text = ANY
                   ((ARRAY ['MAHALLE'::character varying, 'KOYUNU'::character varying, 'SEMT'::character varying, 'VAROS'::character varying, 'MERKEZ'::character varying, 'OUTER_DISTRICT'::character varying, 'INNER_DISTRICT'::character varying, 'VILLAGE'::character varying, 'TOWNSHIP'::character varying, 'WARD'::character varying, 'AREA'::character varying])::text[])),
    noise_level                           varchar(255),
    parking_availability                  varchar(255),
    postal_code                           varchar(255),
    property_demand_level                 varchar(255),
    slug                                  varchar(255)
        unique
);

alter table neighborhoods
    owner to genixo;

create table campuses
(
    established_year integer,
    is_active        boolean,
    is_subscribed    boolean,
    latitude         double precision,
    longitude        double precision,
    rating_average   double precision,
    brand_id         bigint
        constraint fk73pt4umxahx422ic8gpvnngkt
            references brands,
    country_id       bigint       not null
        constraint fkol2x4kiqe82eva7klxw07bjqk
            references countries,
    created_at       timestamp(6),
    created_by       bigint,
    district_id      bigint       not null
        constraint fkdnpmxknq4l7mndrbfafjt4pqw
            references districts,
    id               bigint generated by default as identity
        primary key,
    neighborhood_id  bigint
        constraint fk1o1gfa9y3nufi3uc78eccaoco
            references neighborhoods,
    province_id      bigint
        constraint fkjkls4hvbluna958uyjr3nr277
            references provinces,
    rating_count     bigint,
    updated_at       timestamp(6),
    updated_by       bigint,
    view_count       bigint,
    address_line1    varchar(255) not null,
    address_line2    varchar(255),
    cover_image_url  varchar(255),
    description      text,
    email            varchar(255) not null,
    facebook_url     varchar(255),
    fax              varchar(255),
    instagram_url    varchar(255),
    linkedin_url     varchar(255),
    logo_url         varchar(255),
    meta_description text,
    meta_keywords    varchar(255),
    meta_title       varchar(255),
    name             varchar(255) not null,
    phone            varchar(255) not null,
    postal_code      varchar(255),
    slug             varchar(255) not null
        unique,
    twitter_url      varchar(255),
    website_url      varchar(255),
    youtube_url      varchar(255)
);

alter table campuses
    owner to genixo;

create table schools
(
    annual_fee              double precision,
    capacity                integer,
    class_size_average      integer,
    current_student_count   integer,
    is_active               boolean,
    max_age                 integer,
    min_age                 integer,
    monthly_fee             double precision,
    rating_average          double precision,
    registration_fee        double precision,
    campus_id               bigint       not null
        constraint fk796w0a5luvwh71p1k9ach5dap
            references campuses,
    created_at              timestamp(6),
    created_by              bigint,
    id                      bigint generated by default as identity
        primary key,
    institution_type_id     bigint       not null
        constraint fkkxpbb4nleu0nblp1oflyt01pn
            references institution_types,
    like_count              bigint,
    post_count              bigint,
    rating_count            bigint,
    updated_at              timestamp(6),
    updated_by              bigint,
    view_count              bigint,
    cover_image_url         varchar(255),
    curriculum_type         varchar(255),
    description             text,
    email                   varchar(255),
    extension               varchar(255),
    foreign_languages       varchar(255),
    language_of_instruction varchar(255),
    logo_url                varchar(255),
    meta_description        text,
    meta_keywords           varchar(255),
    meta_title              varchar(255),
    name                    varchar(255) not null,
    phone                   varchar(255),
    slug                    varchar(255) not null
        unique
);

alter table schools
    owner to genixo;

create table analytics
(
    appointment_conversion_rate      double precision,
    appointments_growth_rate         double precision,
    average_rating                   double precision,
    average_session_duration_seconds integer,
    bounce_rate                      double precision,
    churn_rate                       double precision,
    conversion_rate                  double precision,
    date                             date         not null,
    discount_amount_used             numeric(19, 2),
    enrollment_conversion_rate       double precision,
    error_rate                       double precision,
    inquiries_growth_rate            double precision,
    inquiry_conversion_rate          double precision,
    is_active                        boolean,
    page_load_time_ms                integer,
    pages_per_session                double precision,
    rating_change                    double precision,
    revenue                          numeric(19, 2),
    search_to_appointment_rate       double precision,
    server_response_time_ms          integer,
    survey_completion_rate           double precision,
    uptime_percentage                double precision,
    visitors_growth_rate             double precision,
    appointment_completions          bigint,
    appointment_confirmations        bigint,
    appointment_requests             bigint,
    brand_id                         bigint
        constraint fk34dui57sd3vo0ccv1ke5gfalw
            references brands,
    brochure_downloads               bigint,
    calculation_duration_ms          bigint,
    campaign_applications            bigint,
    campaign_clicks                  bigint,
    campaign_conversions             bigint,
    campaign_views                   bigint,
    campus_id                        bigint
        constraint fkql1kud4x736kfgynw97sefent
            references campuses,
    canceled_subscriptions           bigint,
    created_at                       timestamp(6),
    created_by                       bigint,
    desktop_visitors                 bigint,
    direct_traffic                   bigint,
    direction_clicks                 bigint,
    email_clicks                     bigint,
    email_traffic                    bigint,
    gallery_views                    bigint,
    id                               bigint generated by default as identity
        primary key,
    internal_searches                bigint,
    international_visitors           bigint,
    last_calculated_at               timestamp(6),
    local_visitors                   bigint,
    message_inquiries                bigint,
    mobile_visitors                  bigint,
    national_visitors                bigint,
    new_subscriptions                bigint,
    new_visitors                     bigint,
    organic_search_traffic           bigint,
    page_views                       bigint,
    paid_search_traffic              bigint,
    phone_clicks                     bigint,
    post_comments                    bigint,
    post_likes                       bigint,
    post_shares                      bigint,
    post_views                       bigint,
    promo_code_usage                 bigint,
    referral_traffic                 bigint,
    returning_visitors               bigint,
    school_id                        bigint
        constraint fkplk2i3e3vyul2hsrx2fwhp4jm
            references schools,
    social_media_clicks              bigint,
    social_media_traffic             bigint,
    subscription_renewals            bigint,
    survey_responses                 bigint,
    tablet_visitors                  bigint,
    total_ratings                    bigint,
    unique_visitors                  bigint,
    updated_at                       timestamp(6),
    updated_by                       bigint,
    video_views                      bigint,
    zero_result_searches             bigint,
    custom_metrics                   json,
    data_source                      varchar(255),
    metric_type                      varchar(255) not null
        constraint analytics_metric_type_check
            check ((metric_type)::text = ANY
                   ((ARRAY ['TRAFFIC'::character varying, 'ENGAGEMENT'::character varying, 'CONVERSION'::character varying, 'PERFORMANCE'::character varying, 'FINANCIAL'::character varying, 'CONTENT'::character varying, 'USER_BEHAVIOR'::character varying, 'SEARCH'::character varying, 'APPOINTMENT'::character varying, 'SURVEY'::character varying, 'SUBSCRIPTION'::character varying, 'SYSTEM'::character varying])::text[])),
    time_period                      varchar(255) not null
        constraint analytics_time_period_check
            check ((time_period)::text = ANY
                   ((ARRAY ['HOURLY'::character varying, 'DAILY'::character varying, 'WEEKLY'::character varying, 'MONTHLY'::character varying, 'QUARTERLY'::character varying, 'YEARLY'::character varying, 'REAL_TIME'::character varying])::text[]))
);

alter table analytics
    owner to genixo;

create table institution_property_values
(
    boolean_value  boolean,
    date_value     date,
    is_active      boolean,
    number_value   double precision,
    campus_id      bigint
        constraint fkgmcm0p01bpaoev0yh3acdexy1
            references campuses,
    created_at     timestamp(6),
    created_by     bigint,
    datetime_value timestamp(6),
    file_size      bigint,
    id             bigint generated by default as identity
        primary key,
    property_id    bigint not null
        constraint fkgyycr76hrr31j2tciay4g7k21
            references institution_properties,
    school_id      bigint
        constraint fk27m4r3lyekoabp2t4f83pa46f
            references schools,
    updated_at     timestamp(6),
    updated_by     bigint,
    file_name      varchar(255),
    file_url       varchar(255),
    json_value     json,
    mime_type      varchar(255),
    text_value     text
);

alter table institution_property_values
    owner to genixo;

create table subscription_plans
(
    has_analytics              boolean,
    has_api_access             boolean,
    has_custom_domain          boolean,
    has_priority_support       boolean,
    has_white_label            boolean,
    is_active                  boolean,
    is_popular                 boolean,
    is_visible                 boolean,
    max_appointments_per_month integer,
    max_gallery_items          integer,
    max_posts_per_month        integer,
    max_schools                integer,
    max_users                  integer,
    price                      numeric(19, 2) not null,
    sort_order                 integer,
    storage_gb                 integer,
    trial_days                 integer,
    created_at                 timestamp(6),
    created_by                 bigint,
    id                         bigint generated by default as identity
        primary key,
    updated_at                 timestamp(6),
    updated_by                 bigint,
    billing_period             varchar(255)   not null
        constraint subscription_plans_billing_period_check
            check ((billing_period)::text = ANY
                   ((ARRAY ['MONTHLY'::character varying, 'QUARTERLY'::character varying, 'YEARLY'::character varying, 'ONETIME'::character varying])::text[])),
    description                text,
    display_name               varchar(255)   not null,
    features                   json,
    name                       varchar(255)   not null,
    pricing_tiers              json
);

alter table subscription_plans
    owner to genixo;

create table subscriptions
(
    auto_renew                 boolean,
    current_gallery_items      integer,
    current_month_appointments integer,
    current_month_posts        integer,
    current_schools_count      integer,
    current_users_count        integer,
    discount_amount            numeric(19, 2),
    discount_percentage        double precision,
    is_active                  boolean,
    price                      numeric(19, 2) not null,
    campus_id                  bigint         not null
        constraint fkbays58gbntv75lrbxdq8itw9j
            references campuses,
    canceled_at                timestamp(6),
    created_at                 timestamp(6),
    created_by                 bigint,
    end_date                   timestamp(6)   not null,
    grace_period_end           timestamp(6),
    id                         bigint generated by default as identity
        primary key,
    next_billing_date          timestamp(6),
    start_date                 timestamp(6)   not null,
    storage_used_mb            bigint,
    subscription_plan_id       bigint         not null
        constraint fkkvx3dlngas68ve5dvjntb98g4
            references subscription_plans,
    trial_end_date             timestamp(6),
    updated_at                 timestamp(6),
    updated_by                 bigint,
    billing_address            text,
    billing_email              varchar(255),
    billing_name               varchar(255),
    billing_phone              varchar(255),
    cancellation_reason        varchar(255),
    coupon_code                varchar(255),
    currency                   varchar(255)   not null,
    status                     varchar(255)   not null
        constraint subscriptions_status_check
            check ((status)::text = ANY
                   ((ARRAY ['TRIAL'::character varying, 'ACTIVE'::character varying, 'PAST_DUE'::character varying, 'CANCELED'::character varying, 'EXPIRED'::character varying, 'SUSPENDED'::character varying, 'PENDING'::character varying])::text[])),
    tax_number                 varchar(255),
    tax_office                 varchar(255)
);

alter table subscriptions
    owner to genixo;

create table payments
(
    amount                 numeric(19, 2) not null,
    is_active              boolean,
    refund_amount          numeric(19, 2),
    created_at             timestamp(6),
    created_by             bigint,
    due_date               timestamp(6),
    id                     bigint generated by default as identity
        primary key,
    payment_date           timestamp(6),
    period_end             timestamp(6),
    period_start           timestamp(6),
    refund_date            timestamp(6),
    subscription_id        bigint         not null
        constraint fka3xnf2o6mt8cqbewvq2ouq3rq
            references subscriptions,
    updated_at             timestamp(6),
    updated_by             bigint,
    card_brand             varchar(255),
    card_holder_name       varchar(255),
    card_last_four         varchar(255),
    currency               varchar(255)   not null,
    description            varchar(255),
    external_payment_id    varchar(255),
    failure_reason         varchar(255),
    gateway_name           varchar(255),
    gateway_response       json,
    gateway_transaction_id varchar(255),
    payment_method         varchar(255)   not null
        constraint payments_payment_method_check
            check ((payment_method)::text = ANY
                   ((ARRAY ['CREDIT_CARD'::character varying, 'DEBIT_CARD'::character varying, 'BANK_TRANSFER'::character varying, 'MOBILE_PAYMENT'::character varying, 'CRYPTOCURRENCY'::character varying, 'CASH'::character varying, 'CHECK'::character varying, 'PAYPAL'::character varying, 'STRIPE'::character varying, 'IYZICO'::character varying, 'OTHER'::character varying])::text[])),
    payment_reference      varchar(255)   not null
        unique,
    payment_status         varchar(255)   not null
        constraint payments_payment_status_check
            check ((payment_status)::text = ANY
                   ((ARRAY ['PENDING'::character varying, 'PROCESSING'::character varying, 'COMPLETED'::character varying, 'FAILED'::character varying, 'CANCELED'::character varying, 'REFUNDED'::character varying, 'PARTIALLY_REFUNDED'::character varying, 'DISPUTED'::character varying, 'EXPIRED'::character varying])::text[])),
    refund_reason          varchar(255)
);

alter table payments
    owner to genixo;

create table invoices
(
    discount_amount    numeric(19, 2),
    generate_e_invoice boolean,
    is_active          boolean,
    subtotal           numeric(19, 2) not null,
    tax_amount         numeric(19, 2),
    tax_rate           double precision,
    total_amount       numeric(19, 2) not null,
    created_at         timestamp(6),
    created_by         bigint,
    due_date           timestamp(6)   not null,
    e_invoice_sent_at  timestamp(6),
    id                 bigint generated by default as identity
        primary key,
    invoice_date       timestamp(6)   not null,
    payment_id         bigint
        unique
        constraint fkq6fs19k0gqw3rg0mb87h60h6p
            references payments,
    pdf_generated_at   timestamp(6),
    period_end         timestamp(6),
    period_start       timestamp(6),
    subscription_id    bigint         not null
        constraint fkekyltlmwbronx3ubn5it0346p
            references subscriptions,
    updated_at         timestamp(6),
    updated_by         bigint,
    billing_address    text,
    billing_email      varchar(255),
    billing_name       varchar(255)   not null,
    billing_phone      varchar(255),
    currency           varchar(255)   not null,
    description        text,
    e_invoice_response json,
    e_invoice_status   varchar(255),
    e_invoice_uuid     varchar(255),
    invoice_number     varchar(255)   not null
        unique,
    invoice_status     varchar(255)   not null
        constraint invoices_invoice_status_check
            check ((invoice_status)::text = ANY
                   ((ARRAY ['DRAFT'::character varying, 'SENT'::character varying, 'VIEWED'::character varying, 'PAID'::character varying, 'OVERDUE'::character varying, 'CANCELED'::character varying, 'REFUNDED'::character varying, 'DISPUTED'::character varying])::text[])),
    line_items         json,
    notes              text,
    pdf_file_url       varchar(255),
    tax_number         varchar(255),
    tax_office         varchar(255)
);

alter table invoices
    owner to genixo;

create table surveys
(
    average_completion_time_seconds integer,
    average_rating                  double precision,
    expires_after_days              integer,
    is_active                       boolean,
    is_anonymous                    boolean,
    is_mandatory                    boolean,
    max_reminders                   integer,
    reminder_delay_hours            integer,
    send_delay_hours                integer,
    show_results_to_public          boolean,
    created_at                      timestamp(6),
    created_by                      bigint,
    id                              bigint generated by default as identity
        primary key,
    total_completed                 bigint,
    total_sent                      bigint,
    total_started                   bigint,
    updated_at                      timestamp(6),
    updated_by                      bigint,
    completion_redirect_url         varchar(255),
    custom_css                      text,
    description                     text,
    email_body                      text,
    email_subject                   varchar(255),
    email_template_id               varchar(255),
    header_image_url                varchar(255),
    logo_url                        varchar(255),
    primary_color                   varchar(255),
    survey_type                     varchar(255) not null
        constraint surveys_survey_type_check
            check ((survey_type)::text = ANY
                   ((ARRAY ['APPOINTMENT_FEEDBACK'::character varying, 'SCHOOL_RATING'::character varying, 'SERVICE_QUALITY'::character varying, 'ENROLLMENT_FEEDBACK'::character varying, 'GENERAL_FEEDBACK'::character varying, 'CUSTOM'::character varying])::text[])),
    thank_you_message               text,
    title                           varchar(255) not null,
    trigger_event                   varchar(255)
        constraint surveys_trigger_event_check
            check ((trigger_event)::text = ANY
                   ((ARRAY ['APPOINTMENT_COMPLETED'::character varying, 'ENROLLMENT_COMPLETED'::character varying, 'MANUAL_SEND'::character varying, 'PERIODIC'::character varying, 'EVENT_BASED'::character varying])::text[])),
    welcome_message                 text
);

alter table surveys
    owner to genixo;

create table survey_questions
(
    allow_other_option  boolean,
    average_rating      double precision,
    is_active           boolean,
    is_required         boolean,
    rating_scale_max    integer,
    rating_scale_min    integer,
    rating_scale_step   integer,
    sort_order          integer      not null,
    text_max_length     integer,
    text_min_length     integer,
    created_at          timestamp(6),
    created_by          bigint,
    id                  bigint generated by default as identity
        primary key,
    show_if_question_id bigint,
    skip_count          bigint,
    survey_id           bigint       not null
        constraint fk91fvqiwu0dj35uxpnx7qpoiw6
            references surveys,
    total_responses     bigint,
    updated_at          timestamp(6),
    updated_by          bigint,
    custom_css_class    varchar(255),
    description         text,
    help_text           varchar(255),
    image_url           varchar(255),
    options             json,
    other_option_label  varchar(255),
    placeholder_text    varchar(255),
    question_text       text         not null,
    question_type       varchar(255) not null
        constraint survey_questions_question_type_check
            check ((question_type)::text = ANY
                   ((ARRAY ['SINGLE_CHOICE'::character varying, 'MULTIPLE_CHOICE'::character varying, 'DROPDOWN'::character varying, 'TEXT_SHORT'::character varying, 'TEXT_LONG'::character varying, 'EMAIL'::character varying, 'PHONE'::character varying, 'NUMBER'::character varying, 'DATE'::character varying, 'TIME'::character varying, 'RATING_STAR'::character varying, 'RATING_SCALE'::character varying, 'YES_NO'::character varying, 'LIKERT_SCALE'::character varying, 'MATRIX'::character varying, 'FILE_UPLOAD'::character varying, 'SIGNATURE'::character varying, 'SECTION_HEADER'::character varying])::text[])),
    rating_category     varchar(255)
        constraint survey_questions_rating_category_check
            check ((rating_category)::text = ANY
                   ((ARRAY ['OVERALL_SATISFACTION'::character varying, 'CLEANLINESS'::character varying, 'STAFF_FRIENDLINESS'::character varying, 'FACILITIES'::character varying, 'COMMUNICATION'::character varying, 'PROFESSIONALISM'::character varying, 'VALUE_FOR_MONEY'::character varying, 'RECOMMENDATION'::character varying, 'ACADEMIC_QUALITY'::character varying, 'INFRASTRUCTURE'::character varying, 'EXTRACURRICULAR'::character varying, 'SAFETY'::character varying, 'TRANSPORTATION'::character varying, 'CAFETERIA'::character varying, 'TECHNOLOGY'::character varying, 'CUSTOM'::character varying])::text[])),
    rating_labels       json,
    show_if_answer      varchar(255),
    show_if_condition   varchar(255)
        constraint survey_questions_show_if_condition_check
            check ((show_if_condition)::text = ANY
                   ((ARRAY ['EQUALS'::character varying, 'NOT_EQUALS'::character varying, 'CONTAINS'::character varying, 'NOT_CONTAINS'::character varying, 'GREATER_THAN'::character varying, 'LESS_THAN'::character varying, 'GREATER_THAN_EQUAL'::character varying, 'LESS_THAN_EQUAL'::character varying, 'IS_EMPTY'::character varying, 'IS_NOT_EMPTY'::character varying])::text[]))
);

alter table survey_questions
    owner to genixo;

create table users
(
    is_active                 boolean,
    is_email_verified         boolean,
    is_phone_verified         boolean,
    latitude                  double precision,
    longitude                 double precision,
    country_id                bigint
        constraint fkjlpks00ofkq3sqd9hqiavv5lg
            references countries,
    created_at                timestamp(6),
    created_by                bigint,
    district_id               bigint
        constraint fkj30hhy45scxdgcj0usq90504r
            references districts,
    id                        bigint generated by default as identity
        primary key,
    last_login_at             timestamp(6),
    neighborhood_id           bigint
        constraint fktb5m8smi7868syb0kunyupyn2
            references neighborhoods,
    password_reset_expires_at timestamp(6),
    province_id               bigint
        constraint fkmvmjqjo6wsc7b3594dlohbo2y
            references provinces,
    updated_at                timestamp(6),
    updated_by                bigint,
    address_line1             varchar(255),
    address_line2             varchar(255),
    email                     varchar(255) not null
        unique,
    email_verification_token  varchar(255),
    first_name                varchar(255) not null,
    last_name                 varchar(255) not null,
    password                  varchar(255) not null,
    password_reset_token      varchar(255),
    phone                     varchar(255)
        unique,
    phone_verification_code   varchar(255),
    postal_code               varchar(255),
    profile_image_url         varchar(255),
    user_type                 varchar(255) not null
        constraint users_user_type_check
            check ((user_type)::text = ANY
                   ((ARRAY ['INSTITUTION_USER'::character varying, 'PARENT'::character varying])::text[]))
);

alter table users
    owner to genixo;

create table appointment_slots
(
    advance_booking_hours    integer,
    cancellation_hours       integer,
    capacity                 integer,
    duration_minutes         integer      not null,
    end_time                 time(6)      not null,
    is_active                boolean,
    is_recurring             boolean,
    max_advance_booking_days integer,
    online_meeting_available boolean,
    preparation_required     boolean,
    requires_approval        boolean,
    start_time               time(6)      not null,
    valid_from               date,
    valid_until              date,
    created_at               timestamp(6),
    created_by               bigint,
    id                       bigint generated by default as identity
        primary key,
    school_id                bigint       not null
        constraint fk2041igtq2n7db4sdr0f4ah5n3
            references schools,
    staff_user_id            bigint
        constraint fk7g4dyhnr633hbl2wmekujqdgs
            references users,
    updated_at               timestamp(6),
    updated_by               bigint,
    appointment_type         varchar(255)
        constraint appointment_slots_appointment_type_check
            check ((appointment_type)::text = ANY
                   ((ARRAY ['INFORMATION_MEETING'::character varying, 'SCHOOL_TOUR'::character varying, 'ENROLLMENT_INTERVIEW'::character varying, 'PARENT_MEETING'::character varying, 'CONSULTATION'::character varying, 'ASSESSMENT'::character varying, 'ORIENTATION'::character varying, 'ONLINE_MEETING'::character varying, 'PHONE_CALL'::character varying, 'GROUP_MEETING'::character varying, 'OTHER'::character varying])::text[])),
    day_of_week              varchar(255) not null
        constraint appointment_slots_day_of_week_check
            check ((day_of_week)::text = ANY
                   ((ARRAY ['MONDAY'::character varying, 'TUESDAY'::character varying, 'WEDNESDAY'::character varying, 'THURSDAY'::character varying, 'FRIDAY'::character varying, 'SATURDAY'::character varying, 'SUNDAY'::character varying])::text[])),
    description              varchar(255),
    excluded_dates           json,
    location                 varchar(255),
    preparation_notes        text,
    title                    varchar(255)
);

alter table appointment_slots
    owner to genixo;

create table appointments
(
    appointment_date      date         not null,
    end_time              time(6)      not null,
    enrollment_likelihood integer,
    follow_up_date        date,
    follow_up_required    boolean,
    is_active             boolean,
    is_online             boolean,
    reschedule_count      integer,
    start_time            time(6)      not null,
    student_age           integer,
    student_birth_date    date,
    actual_end_time       timestamp(6),
    actual_start_time     timestamp(6),
    appointment_slot_id   bigint       not null
        constraint fk4qkcs7wjud9jlbr8a8ibfw82b
            references appointment_slots,
    canceled_at           timestamp(6),
    canceled_by           bigint,
    confirmed_at          timestamp(6),
    confirmed_by          bigint,
    created_at            timestamp(6),
    created_by            bigint,
    id                    bigint generated by default as identity
        primary key,
    parent_user_id        bigint       not null
        constraint fk917h7lang4fmoqym8ox7s4nnu
            references users,
    reminder_sent_at      timestamp(6),
    rescheduled_from_id   bigint,
    rescheduled_to_id     bigint,
    school_id             bigint       not null
        constraint fk3ka5esnkt765vy29oevfca9sn
            references schools,
    staff_user_id         bigint
        constraint fkhxfr5in68l67oc633q8x956pf
            references users,
    survey_completed_at   timestamp(6),
    survey_sent_at        timestamp(6),
    updated_at            timestamp(6),
    updated_by            bigint,
    appointment_number    varchar(255) not null
        unique,
    appointment_type      varchar(255) not null
        constraint appointments_appointment_type_check
            check ((appointment_type)::text = ANY
                   ((ARRAY ['INFORMATION_MEETING'::character varying, 'SCHOOL_TOUR'::character varying, 'ENROLLMENT_INTERVIEW'::character varying, 'PARENT_MEETING'::character varying, 'CONSULTATION'::character varying, 'ASSESSMENT'::character varying, 'ORIENTATION'::character varying, 'ONLINE_MEETING'::character varying, 'PHONE_CALL'::character varying, 'GROUP_MEETING'::character varying, 'OTHER'::character varying])::text[])),
    canceled_by_type      varchar(255)
        constraint appointments_canceled_by_type_check
            check ((canceled_by_type)::text = ANY
                   ((ARRAY ['PARENT'::character varying, 'SCHOOL'::character varying, 'SYSTEM'::character varying])::text[])),
    cancellation_reason   varchar(255),
    current_school        varchar(255),
    description           text,
    grade_interested      varchar(255),
    internal_notes        text,
    location              varchar(255),
    meeting_id            varchar(255),
    meeting_password      varchar(255),
    meeting_url           varchar(255),
    next_steps            text,
    notes                 text,
    outcome               varchar(255)
        constraint appointments_outcome_check
            check ((outcome)::text = ANY
                   ((ARRAY ['ENROLLED'::character varying, 'INTERESTED'::character varying, 'NOT_INTERESTED'::character varying, 'NEEDS_MORE_INFO'::character varying, 'PRICE_CONCERN'::character varying, 'TIMING_ISSUE'::character varying, 'CONSIDERING_OPTIONS'::character varying, 'WILL_CALL_BACK'::character varying, 'OTHER'::character varying])::text[])),
    outcome_notes         text,
    parent_email          varchar(255) not null,
    parent_name           varchar(255) not null,
    parent_phone          varchar(255) not null,
    special_requests      text,
    status                varchar(255) not null
        constraint appointments_status_check
            check ((status)::text = ANY
                   ((ARRAY ['PENDING'::character varying, 'CONFIRMED'::character varying, 'APPROVED'::character varying, 'REJECTED'::character varying, 'CANCELLED'::character varying, 'COMPLETED'::character varying, 'NO_SHOW'::character varying, 'RESCHEDULED'::character varying, 'IN_PROGRESS'::character varying])::text[])),
    student_gender        varchar(255),
    student_name          varchar(255),
    title                 varchar(255)
);

alter table appointments
    owner to genixo;

create table appointment_notes
(
    is_active       boolean,
    is_important    boolean,
    is_private      boolean,
    appointment_id  bigint       not null
        constraint fkbn25sj0m4rwui7lu1yr13bb61
            references appointments,
    attachment_size bigint,
    author_user_id  bigint       not null
        constraint fk6re6at6wbrfexwdu0bb9ws6qr
            references users,
    created_at      timestamp(6),
    created_by      bigint,
    id              bigint generated by default as identity
        primary key,
    note_date       timestamp(6) not null,
    updated_at      timestamp(6),
    updated_by      bigint,
    attachment_name varchar(255),
    attachment_type varchar(255),
    attachment_url  varchar(255),
    note            text         not null,
    note_type       varchar(255)
        constraint appointment_notes_note_type_check
            check ((note_type)::text = ANY
                   ((ARRAY ['GENERAL'::character varying, 'PREPARATION'::character varying, 'FOLLOW_UP'::character varying, 'OUTCOME'::character varying, 'COMPLAINT'::character varying, 'COMPLIMENT'::character varying, 'TECHNICAL_ISSUE'::character varying, 'RESCHEDULING'::character varying, 'CANCELLATION'::character varying, 'REMINDER'::character varying, 'INTERNAL'::character varying])::text[]))
);

alter table appointment_notes
    owner to genixo;

create table appointment_participants
(
    is_active         boolean,
    appointment_id    bigint       not null
        constraint fk3c7ofbr1kebgtt377eo1rdapg
            references appointments,
    arrival_time      timestamp(6),
    created_at        timestamp(6),
    created_by        bigint,
    departure_time    timestamp(6),
    id                bigint generated by default as identity
        primary key,
    updated_at        timestamp(6),
    updated_by        bigint,
    user_id           bigint
        constraint fkopcduppygs2ln5laml0mtd674
            references users,
    attendance_status varchar(255)
        constraint appointment_participants_attendance_status_check
            check ((attendance_status)::text = ANY
                   ((ARRAY ['EXPECTED'::character varying, 'CONFIRMED'::character varying, 'ATTENDED'::character varying, 'NO_SHOW'::character varying, 'LATE'::character varying, 'LEFT_EARLY'::character varying])::text[])),
    email             varchar(255),
    name              varchar(255) not null,
    notes             varchar(255),
    participant_type  varchar(255) not null
        constraint appointment_participants_participant_type_check
            check ((participant_type)::text = ANY
                   ((ARRAY ['PARENT'::character varying, 'STUDENT'::character varying, 'SCHOOL_STAFF'::character varying, 'CONSULTANT'::character varying, 'OBSERVER'::character varying, 'TRANSLATOR'::character varying, 'OTHER'::character varying])::text[])),
    phone             varchar(255)
);

alter table appointment_participants
    owner to genixo;

create table campaigns
(
    conversion_rate          double precision,
    discount_amount          numeric(19, 2),
    discount_percentage      double precision,
    early_bird_end_date      date,
    end_date                 date         not null,
    enrollment_end_date      date,
    enrollment_start_date    date,
    free_trial_days          integer,
    is_active                boolean,
    is_featured              boolean,
    is_public                boolean,
    max_discount_amount      numeric(19, 2),
    min_purchase_amount      numeric(19, 2),
    payment_deadline_days    integer,
    per_school_limit         integer,
    per_user_limit           integer,
    priority                 integer,
    registration_deadline    date,
    requires_approval        boolean,
    send_notifications       boolean,
    sort_order               integer,
    start_date               date         not null,
    target_age_max           integer,
    target_age_min           integer,
    target_new_students_only boolean,
    target_sibling_discount  boolean,
    usage_count              integer,
    usage_limit              integer,
    application_count        bigint,
    approved_at              timestamp(6),
    approved_by              bigint,
    click_count              bigint,
    conversion_count         bigint,
    created_at               timestamp(6),
    created_by               bigint,
    created_by_user_id       bigint
        constraint fkhuxttiylbe4t3mnis2lbsf6r4
            references users,
    id                       bigint generated by default as identity
        primary key,
    updated_at               timestamp(6),
    updated_by               bigint,
    view_count               bigint,
    academic_year            varchar(255),
    badge_color              varchar(255),
    badge_text               varchar(255),
    banner_image_url         varchar(255),
    bonus_features           json,
    campaign_type            varchar(255) not null
        constraint campaigns_campaign_type_check
            check ((campaign_type)::text = ANY
                   ((ARRAY ['DISCOUNT'::character varying, 'FREE_SERVICE'::character varying, 'BONUS_FEATURE'::character varying, 'EARLY_BIRD'::character varying, 'SUMMER_SCHOOL'::character varying, 'WINTER_CAMP'::character varying, 'FREE_TRIAL'::character varying, 'SIBLING_DISCOUNT'::character varying, 'LOYALTY_REWARD'::character varying, 'REFERRAL_BONUS'::character varying, 'NEW_STUDENT'::character varying, 'SCHOLARSHIP'::character varying, 'INSTALLMENT'::character varying, 'SEASONAL'::character varying, 'SPECIAL_EVENT'::character varying, 'BUNDLE_DEAL'::character varying, 'LIMITED_TIME'::character varying, 'FLASH_SALE'::character varying, 'OTHER'::character varying])::text[])),
    cta_text                 varchar(255),
    cta_url                  varchar(255),
    description              text,
    discount_type            varchar(255)
        constraint campaigns_discount_type_check
            check ((discount_type)::text = ANY
                   ((ARRAY ['FIXED_AMOUNT'::character varying, 'PERCENTAGE'::character varying, 'FREE_MONTHS'::character varying, 'BUY_X_GET_Y'::character varying, 'TIERED'::character varying, 'BUNDLE'::character varying, 'NO_DISCOUNT'::character varying])::text[])),
    email_template_id        varchar(255),
    exclusions               text,
    fine_print               text,
    free_services            json,
    gift_items               json,
    installment_options      varchar(255),
    meta_description         text,
    meta_keywords            varchar(255),
    meta_title               varchar(255),
    notification_message     varchar(255),
    promo_code               varchar(255),
    refund_policy            text,
    short_description        varchar(255),
    slug                     varchar(255) not null
        unique,
    sms_template_id          varchar(255),
    status                   varchar(255) not null
        constraint campaigns_status_check
            check ((status)::text = ANY
                   ((ARRAY ['DRAFT'::character varying, 'PENDING_APPROVAL'::character varying, 'APPROVED'::character varying, 'ACTIVE'::character varying, 'PAUSED'::character varying, 'EXPIRED'::character varying, 'CANCELLED'::character varying, 'COMPLETED'::character varying, 'ARCHIVED'::character varying])::text[])),
    target_audience          varchar(255)
        constraint campaigns_target_audience_check
            check ((target_audience)::text = ANY
                   ((ARRAY ['ALL'::character varying, 'NEW_STUDENTS'::character varying, 'EXISTING_STUDENTS'::character varying, 'SIBLINGS'::character varying, 'EARLY_REGISTRANTS'::character varying, 'LOCAL_RESIDENTS'::character varying, 'REFERRALS'::character varying, 'VIP_MEMBERS'::character varying, 'SPECIFIC_GRADES'::character varying, 'SPECIFIC_AGES'::character varying, 'LOYALTY_MEMBERS'::character varying, 'FIRST_TIME_VISITORS'::character varying])::text[])),
    target_grade_levels      varchar(255),
    terms_and_conditions     text,
    thumbnail_image_url      varchar(255),
    title                    varchar(255) not null,
    video_url                varchar(255)
);

alter table campaigns
    owner to genixo;

create table campaign_contents
(
    attribution_required   boolean,
    duration_seconds       integer,
    engagement_rate        double precision,
    is_active              boolean,
    is_primary             boolean,
    is_test_variant        boolean,
    sort_order             integer,
    approved_at            timestamp(6),
    approved_by            bigint,
    campaign_id            bigint       not null
        constraint fkjn6uyd8tgrlvu2mewqya33b5j
            references campaigns,
    click_count            bigint,
    created_at             timestamp(6),
    created_by             bigint,
    download_count         bigint,
    file_size_bytes        bigint,
    id                     bigint generated by default as identity
        primary key,
    share_count            bigint,
    updated_at             timestamp(6),
    updated_by             bigint,
    view_count             bigint,
    alt_text               varchar(255),
    approval_status        varchar(255)
        constraint campaign_contents_approval_status_check
            check ((approval_status)::text = ANY
                   ((ARRAY ['PENDING'::character varying, 'APPROVED'::character varying, 'REJECTED'::character varying, 'NEEDS_REVISION'::character varying, 'IN_REVIEW'::character varying, 'EXPIRED'::character varying, 'ARCHIVED'::character varying])::text[])),
    attribution_text       varchar(255),
    caption                varchar(255),
    content                text,
    content_type           varchar(255) not null
        constraint campaign_contents_content_type_check
            check ((content_type)::text = ANY
                   ((ARRAY ['BANNER_IMAGE'::character varying, 'THUMBNAIL_IMAGE'::character varying, 'HERO_IMAGE'::character varying, 'GALLERY_IMAGE'::character varying, 'PROMOTIONAL_VIDEO'::character varying, 'TESTIMONIAL_VIDEO'::character varying, 'INFOGRAPHIC'::character varying, 'BROCHURE'::character varying, 'FLYER'::character varying, 'POSTER'::character varying, 'SOCIAL_MEDIA_POST'::character varying, 'EMAIL_HEADER'::character varying, 'WEB_BANNER'::character varying, 'MOBILE_BANNER'::character varying, 'STORY_TEMPLATE'::character varying, 'LOGO_VARIATION'::character varying, 'ICON'::character varying, 'BACKGROUND_IMAGE'::character varying, 'PATTERN'::character varying, 'WATERMARK'::character varying, 'AUDIO_AD'::character varying, 'JINGLE'::character varying, 'PRESENTATION'::character varying, 'DOCUMENT'::character varying, 'CERTIFICATE'::character varying, 'BADGE'::character varying, 'STICKER'::character varying, 'GIF_ANIMATION'::character varying, 'INTERACTIVE_CONTENT'::character varying, 'AR_CONTENT'::character varying, 'VR_CONTENT'::character varying, 'THREE_D_MODEL'::character varying, 'OTHER'::character varying])::text[])),
    copyright_owner        varchar(255),
    dimensions             varchar(255),
    hashtags               varchar(255),
    language_code          varchar(255),
    license_type           varchar(255),
    media_url              varchar(255),
    mention_accounts       varchar(255),
    mime_type              varchar(255),
    rejection_reason       varchar(255),
    social_media_platforms json,
    thumbnail_url          varchar(255),
    title                  varchar(255),
    usage_context          varchar(255)
        constraint campaign_contents_usage_context_check
            check ((usage_context)::text = ANY
                   ((ARRAY ['WEBSITE_HOMEPAGE'::character varying, 'SCHOOL_PAGE'::character varying, 'CAMPAIGN_PAGE'::character varying, 'PRICING_PAGE'::character varying, 'EMAIL_CAMPAIGN'::character varying, 'SMS_CAMPAIGN'::character varying, 'SOCIAL_MEDIA'::character varying, 'PRINT_MEDIA'::character varying, 'OUTDOOR_ADVERTISING'::character varying, 'RADIO'::character varying, 'TV'::character varying, 'MOBILE_APP'::character varying, 'PUSH_NOTIFICATION'::character varying, 'SEARCH_ADS'::character varying, 'DISPLAY_ADS'::character varying, 'VIDEO_ADS'::character varying, 'INFLUENCER_CONTENT'::character varying, 'PARTNERSHIP_CONTENT'::character varying, 'EVENT_MATERIAL'::character varying, 'PRESENTATION'::character varying, 'BROCHURE'::character varying, 'NEWSLETTER'::character varying, 'BLOG_POST'::character varying, 'CASE_STUDY'::character varying, 'TESTIMONIAL'::character varying, 'FAQ'::character varying, 'LANDING_PAGE'::character varying, 'POPUP'::character varying, 'BANNER'::character varying, 'SIDEBAR'::character varying, 'FOOTER'::character varying, 'OTHER'::character varying])::text[])),
    usage_rights           text,
    variant_name           varchar(255)
);

alter table campaign_contents
    owner to genixo;

create table campaign_schools
(
    application_count          integer,
    approved_by_school         boolean,
    conversion_count           integer,
    custom_discount_amount     numeric(19, 2),
    custom_discount_percentage double precision,
    custom_end_date            date,
    custom_start_date          date,
    custom_usage_limit         integer,
    is_active                  boolean,
    is_featured_on_school      boolean,
    priority                   integer,
    revenue_generated          numeric(19, 2),
    show_on_homepage           boolean,
    show_on_pricing_page       boolean,
    usage_count                integer,
    appointment_count          bigint,
    approved_by_school_at      timestamp(6),
    approved_by_school_user_id bigint,
    assigned_at                timestamp(6) not null,
    assigned_by_user_id        bigint
        constraint fk9ljcclkcvq8xmvhggbpc13xx9
            references users,
    campaign_id                bigint       not null
        constraint fk1oawiqg86mfk0r5052or9h6ul
            references campaigns,
    click_count                bigint,
    created_at                 timestamp(6),
    created_by                 bigint,
    id                         bigint generated by default as identity
        primary key,
    inquiry_count              bigint,
    school_id                  bigint       not null
        constraint fklgjtxgynh9ji8xsijru7b0fr8
            references schools,
    updated_at                 timestamp(6),
    updated_by                 bigint,
    view_count                 bigint,
    custom_terms               text,
    school_notes               varchar(255),
    status                     varchar(255) not null
        constraint campaign_schools_status_check
            check ((status)::text = ANY
                   ((ARRAY ['PENDING'::character varying, 'ACTIVE'::character varying, 'PAUSED'::character varying, 'REJECTED'::character varying, 'EXPIRED'::character varying, 'COMPLETED'::character varying, 'REMOVED'::character varying])::text[])),
    unique (campaign_id, school_id)
);

alter table campaign_schools
    owner to genixo;

create table campaign_usages
(
    discount_amount       numeric(19, 2),
    final_amount          numeric(19, 2),
    follow_up_completed   boolean,
    follow_up_required    boolean,
    is_active             boolean,
    is_validated          boolean,
    original_amount       numeric(19, 2),
    student_age           integer,
    appointment_id        bigint,
    approved_at           timestamp(6),
    approved_by           bigint,
    campaign_id           bigint       not null
        constraint fkpwthaa6a0ccsodec604kcm9ui
            references campaigns,
    created_at            timestamp(6),
    created_by            bigint,
    enrollment_id         bigint,
    follow_up_date        timestamp(6),
    id                    bigint generated by default as identity
        primary key,
    invoice_id            bigint,
    processed_at          timestamp(6),
    school_id             bigint       not null
        constraint fkoc0tfttnfpkfe37okprcytewn
            references schools,
    updated_at            timestamp(6),
    updated_by            bigint,
    usage_date            timestamp(6) not null,
    user_id               bigint
        constraint fk14e3ne7ks7sdvtastyw21c3cc
            references users,
    validated_at          timestamp(6),
    validation_expires_at timestamp(6),
    enrollment_year       varchar(255),
    grade_level           varchar(255),
    internal_notes        text,
    ip_address            varchar(255),
    notes                 text,
    parent_email          varchar(255),
    parent_name           varchar(255),
    parent_phone          varchar(255),
    promo_code_used       varchar(255),
    referrer_url          varchar(255),
    status                varchar(255) not null
        constraint campaign_usages_status_check
            check ((status)::text = ANY
                   ((ARRAY ['PENDING'::character varying, 'VALIDATED'::character varying, 'APPROVED'::character varying, 'PROCESSED'::character varying, 'COMPLETED'::character varying, 'REJECTED'::character varying, 'EXPIRED'::character varying, 'CANCELLED'::character varying, 'DUPLICATE'::character varying, 'FRAUD_SUSPECTED'::character varying])::text[])),
    student_name          varchar(255),
    usage_type            varchar(255) not null
        constraint campaign_usages_usage_type_check
            check ((usage_type)::text = ANY
                   ((ARRAY ['INQUIRY'::character varying, 'APPOINTMENT'::character varying, 'ENROLLMENT'::character varying, 'TRIAL_REQUEST'::character varying, 'BROCHURE_DOWNLOAD'::character varying, 'PHONE_CALL'::character varying, 'EMAIL_RESPONSE'::character varying, 'FORM_SUBMISSION'::character varying, 'NEWSLETTER_SIGNUP'::character varying, 'SOCIAL_MEDIA_FOLLOW'::character varying, 'REFERRAL'::character varying, 'OTHER'::character varying])::text[])),
    user_agent            varchar(255),
    utm_campaign          varchar(255),
    utm_medium            varchar(255),
    utm_source            varchar(255),
    validation_code       varchar(255)
);

alter table campaign_usages
    owner to genixo;

create table galleries
(
    allow_comments     boolean,
    allow_downloads    boolean,
    is_active          boolean,
    is_featured        boolean,
    sort_order         integer,
    brand_id           bigint
        constraint fkl9qdofnmiff36c89feo9on0wt
            references brands,
    campus_id          bigint
        constraint fkf2oe56p2evrf31n5bg0aa20lr
            references campuses,
    created_at         timestamp(6),
    created_by         bigint,
    created_by_user_id bigint       not null
        constraint fk40jliregd6yi1i027mfj1v38x
            references users,
    download_count     bigint,
    id                 bigint generated by default as identity
        primary key,
    item_count         bigint,
    school_id          bigint
        constraint fk7jkvuooo188dsc2vuwk59hjph
            references schools,
    total_size_bytes   bigint,
    updated_at         timestamp(6),
    updated_by         bigint,
    view_count         bigint,
    cover_image_url    varchar(255),
    description        text,
    gallery_type       varchar(255) not null
        constraint galleries_gallery_type_check
            check ((gallery_type)::text = ANY
                   ((ARRAY ['MIXED'::character varying, 'PHOTOS'::character varying, 'VIDEOS'::character varying, 'SCHOOL_TOUR'::character varying, 'EVENTS'::character varying, 'FACILITIES'::character varying, 'CLASSROOMS'::character varying, 'OUTDOOR_AREAS'::character varying, 'CAFETERIA'::character varying, 'LIBRARY'::character varying, 'LABORATORY'::character varying, 'SPORTS_FACILITIES'::character varying, 'TRANSPORTATION'::character varying, 'ACHIEVEMENTS'::character varying, 'GRADUATION'::character varying, 'CEREMONIES'::character varying, 'DAILY_ACTIVITIES'::character varying, 'STUDENT_WORK'::character varying, 'STAFF'::character varying, 'CAMPUS_LIFE'::character varying, 'BEFORE_AFTER'::character varying])::text[])),
    meta_description   varchar(255),
    meta_title         varchar(255),
    slug               varchar(255)
        unique,
    tags               varchar(255),
    title              varchar(255) not null,
    visibility         varchar(255) not null
        constraint galleries_visibility_check
            check ((visibility)::text = ANY
                   ((ARRAY ['PUBLIC'::character varying, 'PRIVATE'::character varying, 'REGISTERED_ONLY'::character varying, 'PASSWORD_PROTECTED'::character varying])::text[]))
);

alter table galleries
    owner to genixo;

create table gallery_items
(
    bitrate             integer,
    duration_seconds    integer,
    frame_rate          double precision,
    height              integer,
    is_active           boolean,
    is_cover            boolean,
    is_featured         boolean,
    is_flagged          boolean,
    is_moderated        boolean,
    latitude            double precision,
    longitude           double precision,
    moderation_score    double precision,
    sort_order          integer,
    width               integer,
    created_at          timestamp(6),
    created_by          bigint,
    download_count      bigint,
    file_size_bytes     bigint,
    gallery_id          bigint       not null
        constraint fktao5t9y186co9arx03hlqgbd
            references galleries,
    id                  bigint generated by default as identity
        primary key,
    like_count          bigint,
    processed_at        timestamp(6),
    taken_at            timestamp(6),
    updated_at          timestamp(6),
    updated_by          bigint,
    uploaded_by_user_id bigint       not null
        constraint fkopt2mucjwbt5wr90ol4al49rd
            references users,
    view_count          bigint,
    alt_text            varchar(255),
    aspect_ratio        varchar(255),
    camera_make         varchar(255),
    camera_model        varchar(255),
    color_palette       json,
    description         text,
    file_name           varchar(255) not null,
    file_url            varchar(255) not null,
    flag_reason         varchar(255),
    item_type           varchar(255) not null
        constraint gallery_items_item_type_check
            check ((item_type)::text = ANY
                   ((ARRAY ['IMAGE'::character varying, 'VIDEO'::character varying, 'AUDIO'::character varying, 'DOCUMENT'::character varying, 'ARCHIVE'::character varying, 'OTHER'::character varying])::text[])),
    location_name       varchar(255),
    mime_type           varchar(255),
    moderation_labels   json,
    original_file_name  varchar(255),
    processing_error    varchar(255),
    processing_status   varchar(255)
        constraint gallery_items_processing_status_check
            check ((processing_status)::text = ANY
                   ((ARRAY ['PENDING'::character varying, 'PROCESSING'::character varying, 'COMPLETED'::character varying, 'FAILED'::character varying, 'CANCELLED'::character varying])::text[])),
    tags                varchar(255),
    thumbnail_url       varchar(255),
    title               varchar(255),
    video_codec         varchar(255),
    video_format        varchar(255)
);

alter table gallery_items
    owner to genixo;

create table messages
(
    follow_up_required       boolean,
    has_attachments          boolean,
    is_active                boolean,
    request_appointment      boolean,
    request_callback         boolean,
    resolution_time_hours    double precision,
    response_time_hours      double precision,
    satisfaction_rating      integer,
    student_age              integer,
    assigned_to_user_id      bigint
        constraint fk6rqgqh7l0ufn1j45qstbtgiq8
            references users,
    created_at               timestamp(6),
    created_by               bigint,
    first_response_at        timestamp(6),
    follow_up_date           timestamp(6),
    id                       bigint generated by default as identity
        primary key,
    last_response_at         timestamp(6),
    read_at                  timestamp(6),
    read_by                  bigint,
    resolved_at              timestamp(6),
    resolved_by              bigint,
    satisfaction_date        timestamp(6),
    school_id                bigint       not null
        constraint fkmft2braq1ps0od6rue35jtop7
            references schools,
    sender_user_id           bigint
        constraint fkk4mpqp6gfuaelpcamqv01brkr
            references users,
    updated_at               timestamp(6),
    updated_by               bigint,
    attachments              json,
    content                  text         not null,
    enrollment_year          varchar(255),
    follow_up_notes          varchar(255),
    grade_interested         varchar(255),
    internal_notes           text,
    ip_address               varchar(255),
    message_type             varchar(255) not null
        constraint messages_message_type_check
            check ((message_type)::text = ANY
                   ((ARRAY ['GENERAL_INQUIRY'::character varying, 'ENROLLMENT_INQUIRY'::character varying, 'APPOINTMENT_REQUEST'::character varying, 'COMPLAINT'::character varying, 'SUGGESTION'::character varying, 'TECHNICAL_SUPPORT'::character varying, 'FINANCIAL_INQUIRY'::character varying, 'TRANSPORTATION'::character varying, 'CAFETERIA'::character varying, 'EXTRACURRICULAR'::character varying, 'ACADEMIC_INQUIRY'::character varying, 'FACILITIES_INQUIRY'::character varying, 'CALLBACK_REQUEST'::character varying, 'BROCHURE_REQUEST'::character varying, 'PARTNERSHIP'::character varying, 'MEDIA_INQUIRY'::character varying, 'OTHER'::character varying])::text[])),
    preferred_contact_method varchar(255),
    preferred_contact_time   varchar(255),
    priority                 varchar(255) not null
        constraint messages_priority_check
            check ((priority)::text = ANY
                   ((ARRAY ['LOW'::character varying, 'NORMAL'::character varying, 'HIGH'::character varying, 'URGENT'::character varying, 'CRITICAL'::character varying])::text[])),
    reference_number         varchar(255)
        unique,
    satisfaction_feedback    varchar(255),
    sender_email             varchar(255) not null,
    sender_name              varchar(255) not null,
    sender_phone             varchar(255),
    source_page              varchar(255),
    status                   varchar(255) not null
        constraint messages_status_check
            check ((status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'READ'::character varying, 'IN_PROGRESS'::character varying, 'WAITING_RESPONSE'::character varying, 'RESPONDED'::character varying, 'RESOLVED'::character varying, 'CLOSED'::character varying, 'ESCALATED'::character varying, 'SPAM'::character varying, 'ARCHIVED'::character varying])::text[])),
    student_name             varchar(255),
    subject                  varchar(255) not null,
    tags                     varchar(255),
    user_agent               text,
    utm_campaign             varchar(255),
    utm_medium               varchar(255),
    utm_source               varchar(255)
);

alter table messages
    owner to genixo;

create table posts
(
    allow_comments            boolean,
    allow_likes               boolean,
    average_read_time_seconds integer,
    engagement_score          double precision,
    flag_count                integer,
    is_active                 boolean,
    is_featured               boolean,
    is_flagged                boolean,
    is_moderated              boolean,
    is_pinned                 boolean,
    latitude                  double precision,
    longitude                 double precision,
    video_duration_seconds    integer,
    author_user_id            bigint       not null
        constraint fk446gjq0cnhqile4mytd0fo2km
            references users,
    click_count               bigint,
    comment_count             bigint,
    created_at                timestamp(6),
    created_by                bigint,
    expires_at                timestamp(6),
    id                        bigint generated by default as identity
        primary key,
    impression_count          bigint,
    like_count                bigint,
    moderated_at              timestamp(6),
    moderated_by              bigint,
    pin_expires_at            timestamp(6),
    published_at              timestamp(6),
    reach_count               bigint,
    scheduled_at              timestamp(6),
    school_id                 bigint       not null
        constraint fk43wogx5xdnqbli58pwa93jnou
            references schools,
    share_count               bigint,
    updated_at                timestamp(6),
    updated_by                bigint,
    view_count                bigint,
    call_to_action            varchar(255),
    content                   text         not null,
    cta_url                   varchar(255),
    external_url              varchar(255),
    featured_image_url        varchar(255),
    hashtags                  varchar(255),
    location_name             varchar(255),
    media_attachments         json,
    meta_description          text,
    meta_title                varchar(255),
    moderation_notes          varchar(255),
    post_type                 varchar(255) not null
        constraint posts_post_type_check
            check ((post_type)::text = ANY
                   ((ARRAY ['TEXT'::character varying, 'IMAGE'::character varying, 'VIDEO'::character varying, 'GALLERY'::character varying, 'LINK'::character varying, 'EVENT'::character varying, 'ANNOUNCEMENT'::character varying, 'NEWS'::character varying, 'ACHIEVEMENT'::character varying, 'CELEBRATION'::character varying, 'POLL'::character varying, 'QUOTE'::character varying, 'TESTIMONIAL'::character varying, 'BEHIND_SCENES'::character varying, 'LIVE_STREAM'::character varying])::text[])),
    slug                      varchar(255)
        unique,
    status                    varchar(255) not null
        constraint posts_status_check
            check ((status)::text = ANY
                   ((ARRAY ['DRAFT'::character varying, 'SCHEDULED'::character varying, 'PUBLISHED'::character varying, 'ARCHIVED'::character varying, 'DELETED'::character varying, 'MODERATION'::character varying, 'REJECTED'::character varying, 'EXPIRED'::character varying])::text[])),
    tags                      varchar(255),
    title                     varchar(255),
    video_thumbnail_url       varchar(255),
    video_url                 varchar(255)
);

alter table posts
    owner to genixo;

create table post_comments
(
    flag_count        integer,
    is_active         boolean,
    is_edited         boolean,
    is_flagged        boolean,
    is_moderated      boolean,
    created_at        timestamp(6),
    created_by        bigint,
    edited_at         timestamp(6),
    id                bigint generated by default as identity
        primary key,
    like_count        bigint,
    moderated_at      timestamp(6),
    moderated_by      bigint,
    parent_comment_id bigint
        constraint fk21q7y8a124im4g0l4aaxn4ol1
            references post_comments,
    post_id           bigint       not null
        constraint fkaawaqxjs3br8dw5v90w7uu514
            references posts,
    reply_count       bigint,
    updated_at        timestamp(6),
    updated_by        bigint,
    user_id           bigint       not null
        constraint fksnxoecngu89u3fh4wdrgf0f2g
            references users,
    content           text         not null,
    moderation_reason varchar(255),
    status            varchar(255) not null
        constraint post_comments_status_check
            check ((status)::text = ANY
                   ((ARRAY ['PUBLISHED'::character varying, 'PENDING'::character varying, 'MODERATION'::character varying, 'APPROVED'::character varying, 'REJECTED'::character varying, 'DELETED'::character varying, 'HIDDEN'::character varying])::text[])),
    user_agent        varchar(255),
    user_ip           varchar(255)
);

alter table post_comments
    owner to genixo;

create table post_likes
(
    is_active     boolean,
    created_at    timestamp(6),
    created_by    bigint,
    id            bigint generated by default as identity
        primary key,
    liked_at      timestamp(6) not null,
    post_id       bigint       not null
        constraint fka5wxsgl4doibhbed9gm7ikie2
            references posts,
    updated_at    timestamp(6),
    updated_by    bigint,
    user_id       bigint       not null
        constraint fkkgau5n0nlewg6o9lr4yibqgxj
            references users,
    device_type   varchar(255),
    reaction_type varchar(255)
        constraint post_likes_reaction_type_check
            check ((reaction_type)::text = ANY
                   ((ARRAY ['LIKE'::character varying, 'LOVE'::character varying, 'WOW'::character varying, 'CONGRATULATIONS'::character varying, 'THANKS'::character varying, 'SUPPORT'::character varying])::text[])),
    user_agent    varchar(255),
    user_ip       varchar(255),
    unique (post_id, user_id)
);

alter table post_likes
    owner to genixo;

create table school_pricing
(
    activity_fee                      numeric(19, 2),
    annual_tuition                    numeric(19, 2),
    application_fee                   numeric(19, 2),
    art_fee                           numeric(19, 2),
    book_fee                          numeric(19, 2),
    cafeteria_fee                     numeric(19, 2),
    cancellation_fee                  numeric(19, 2),
    down_payment_amount               numeric(19, 2),
    down_payment_percentage           double precision,
    early_payment_discount_percentage double precision,
    enrollment_fee                    numeric(19, 2),
    exam_fee                          numeric(19, 2),
    extended_day_fee                  numeric(19, 2),
    graduation_fee                    numeric(19, 2),
    highlight_total_cost              boolean,
    installment_amount                numeric(19, 2),
    installment_count                 integer,
    insurance_fee                     numeric(19, 2),
    is_active                         boolean,
    is_current                        boolean,
    laboratory_fee                    numeric(19, 2),
    language_course_fee               numeric(19, 2),
    late_payment_penalty_percentage   double precision,
    library_fee                       numeric(19, 2),
    loyalty_discount_percentage       double precision,
    maintenance_fee                   numeric(19, 2),
    merit_based_aid_available         boolean,
    monthly_tuition                   numeric(19, 2),
    multi_year_discount_percentage    double precision,
    music_fee                         numeric(19, 2),
    need_based_aid_available          boolean,
    private_lesson_fee                numeric(19, 2),
    registration_fee                  numeric(19, 2),
    security_fee                      numeric(19, 2),
    semester_tuition                  numeric(19, 2),
    show_detailed_breakdown           boolean,
    show_financial_aid_info           boolean,
    show_payment_options              boolean,
    sibling_discount_percentage       double precision,
    sports_fee                        numeric(19, 2),
    summer_school_fee                 numeric(19, 2),
    technology_fee                    numeric(19, 2),
    total_annual_cost                 numeric(19, 2),
    total_monthly_cost                numeric(19, 2),
    total_one_time_fees               numeric(19, 2),
    transportation_fee                numeric(19, 2),
    tutoring_fee                      numeric(19, 2),
    uniform_fee                       numeric(19, 2),
    valid_from                        date         not null,
    valid_until                       date         not null,
    version                           integer,
    winter_camp_fee                   numeric(19, 2),
    withdrawal_refund_percentage      double precision,
    approved_at                       timestamp(6),
    approved_by                       bigint,
    created_at                        timestamp(6),
    created_by                        bigint,
    created_by_user_id                bigint       not null
        constraint fkelugprjxkqrvmrg577seoy2mw
            references users,
    id                                bigint generated by default as identity
        primary key,
    previous_pricing_id               bigint,
    school_id                         bigint       not null
        constraint fk3p1r58lnvywc1d58771xxkj7h
            references schools,
    updated_at                        timestamp(6),
    updated_by                        bigint,
    academic_year                     varchar(255) not null,
    approval_notes                    varchar(255),
    class_level                       varchar(255),
    competitor_analysis               json,
    currency                          varchar(255) not null
        constraint school_pricing_currency_check
            check ((currency)::text = ANY
                   ((ARRAY ['TRY'::character varying, 'USD'::character varying, 'EUR'::character varying, 'GBP'::character varying, 'CHF'::character varying, 'CAD'::character varying, 'AUD'::character varying, 'JPY'::character varying, 'CNY'::character varying, 'RUB'::character varying, 'SAR'::character varying, 'AED'::character varying, 'QAR'::character varying, 'KWD'::character varying, 'BHD'::character varying])::text[])),
    fee_breakdown_notes               text,
    grade_level                       varchar(255) not null,
    internal_notes                    text,
    market_position                   varchar(255),
    payment_frequency                 varchar(255)
        constraint school_pricing_payment_frequency_check
            check ((payment_frequency)::text = ANY
                   ((ARRAY ['ONE_TIME'::character varying, 'MONTHLY'::character varying, 'QUARTERLY'::character varying, 'SEMESTER'::character varying, 'ANNUAL'::character varying, 'BIANNUAL'::character varying, 'CUSTOM'::character varying])::text[])),
    payment_terms                     text,
    pricing_tiers                     json,
    public_description                text,
    refund_policy                     text,
    status                            varchar(255) not null
        constraint school_pricing_status_check
            check ((status)::text = ANY
                   ((ARRAY ['DRAFT'::character varying, 'PENDING_APPROVAL'::character varying, 'APPROVED'::character varying, 'ACTIVE'::character varying, 'INACTIVE'::character varying, 'ARCHIVED'::character varying, 'SUPERSEDED'::character varying])::text[]))
);

alter table school_pricing
    owner to genixo;

create table custom_fees
(
    advance_notice_days          integer,
    applies_to_existing_students boolean,
    applies_to_new_students      boolean,
    average_payment_delay_days   double precision,
    collection_rate              double precision,
    discount_eligible            boolean,
    display_on_invoice           boolean,
    display_order                integer,
    documentation_required       boolean,
    due_date_offset_days         integer,
    fee_amount                   numeric(19, 2) not null,
    installment_allowed          boolean,
    is_active                    boolean,
    is_mandatory                 boolean        not null,
    is_refundable                boolean,
    late_fee_percentage          double precision,
    max_installments             integer,
    maximum_age                  integer,
    minimum_age                  integer,
    parent_notification_required boolean,
    requires_approval            boolean,
    scholarship_applicable       boolean,
    students_charged             integer,
    students_paid                integer,
    total_collected              numeric(19, 2),
    valid_from                   date,
    valid_until                  date,
    approved_at                  timestamp(6),
    approved_by                  bigint,
    created_at                   timestamp(6),
    created_by                   bigint,
    created_by_user_id           bigint         not null
        constraint fk5p10fwnawxar2q47caru7bmec
            references users,
    id                           bigint generated by default as identity
        primary key,
    school_pricing_id            bigint         not null
        constraint fk72jfi305lgers2oypv81ca6ps
            references school_pricing,
    updated_at                   timestamp(6),
    updated_by                   bigint,
    applies_to_grades            varchar(255),
    approval_notes               varchar(255),
    fee_description              text,
    fee_frequency                varchar(255)   not null
        constraint custom_fees_fee_frequency_check
            check ((fee_frequency)::text = ANY
                   ((ARRAY ['ONE_TIME'::character varying, 'MONTHLY'::character varying, 'QUARTERLY'::character varying, 'SEMESTER'::character varying, 'ANNUAL'::character varying, 'BIANNUAL'::character varying, 'CUSTOM'::character varying])::text[])),
    fee_name                     varchar(255)   not null,
    fee_policy                   text,
    fee_type                     varchar(255)   not null
        constraint custom_fees_fee_type_check
            check ((fee_type)::text = ANY
                   ((ARRAY ['ACADEMIC'::character varying, 'ADMINISTRATIVE'::character varying, 'FACILITY'::character varying, 'TECHNOLOGY'::character varying, 'EQUIPMENT'::character varying, 'SERVICE'::character varying, 'ACTIVITY'::character varying, 'TRANSPORTATION'::character varying, 'MEAL'::character varying, 'ACCOMMODATION'::character varying, 'INSURANCE'::character varying, 'SECURITY'::character varying, 'MAINTENANCE'::character varying, 'UTILITIES'::character varying, 'MATERIALS'::character varying, 'EXAMINATION'::character varying, 'CERTIFICATION'::character varying, 'GRADUATION'::character varying, 'PENALTY'::character varying, 'DEPOSIT'::character varying, 'REFUNDABLE_DEPOSIT'::character varying, 'MEMBERSHIP'::character varying, 'REGISTRATION'::character varying, 'PROCESSING'::character varying, 'LATE_FEE'::character varying, 'CANCELLATION'::character varying, 'REPLACEMENT'::character varying, 'DAMAGE'::character varying, 'LOST_ITEM'::character varying, 'SPECIAL_EVENT'::character varying, 'FIELD_TRIP'::character varying, 'SUMMER_PROGRAM'::character varying, 'WINTER_PROGRAM'::character varying, 'TUTORING'::character varying, 'COUNSELING'::character varying, 'HEALTH_SERVICE'::character varying, 'LIBRARY'::character varying, 'LABORATORY'::character varying, 'WORKSHOP'::character varying, 'CLUB'::character varying, 'SPORTS'::character varying, 'ART'::character varying, 'MUSIC'::character varying, 'DRAMA'::character varying, 'LANGUAGE'::character varying, 'COMPETITION'::character varying, 'AWARD_CEREMONY'::character varying, 'PARENT_MEETING'::character varying, 'CONFERENCE'::character varying, 'WORKSHOP_MATERIAL'::character varying, 'SUBSCRIPTION'::character varying, 'LICENSE'::character varying, 'SOFTWARE'::character varying, 'PLATFORM_ACCESS'::character varying, 'ONLINE_CONTENT'::character varying, 'DIGITAL_RESOURCE'::character varying, 'PRINTING'::character varying, 'SCANNING'::character varying, 'PHOTOCOPYING'::character varying, 'BINDING'::character varying, 'LAMINATION'::character varying, 'ID_CARD'::character varying, 'UNIFORM'::character varying, 'SHOES'::character varying, 'BAG'::character varying, 'STATIONERY'::character varying, 'TEXTBOOK'::character varying, 'WORKBOOK'::character varying, 'NOTEBOOK'::character varying, 'CALCULATOR'::character varying, 'TABLET'::character varying, 'LAPTOP'::character varying, 'SOFTWARE_LICENSE'::character varying, 'CLOUD_STORAGE'::character varying, 'INTERNET_ACCESS'::character varying, 'WIFI_ACCESS'::character varying, 'PARKING'::character varying, 'LOCKER'::character varying, 'KEY_REPLACEMENT'::character varying, 'CARD_REPLACEMENT'::character varying, 'TRANSCRIPT'::character varying, 'DIPLOMA'::character varying, 'REFERENCE_LETTER'::character varying, 'DOCUMENT_TRANSLATION'::character varying, 'NOTARIZATION'::character varying, 'APOSTILLE'::character varying, 'VISA_SUPPORT'::character varying, 'IMMIGRATION_SUPPORT'::character varying, 'LEGAL_CONSULTATION'::character varying, 'FINANCIAL_AID_PROCESSING'::character varying, 'SCHOLARSHIP_PROCESSING'::character varying, 'LOAN_PROCESSING'::character varying, 'PAYMENT_PROCESSING'::character varying, 'BANK_TRANSFER'::character varying, 'CREDIT_CARD_FEE'::character varying, 'INSTALLMENT_FEE'::character varying, 'INTEREST'::character varying, 'CURRENCY_EXCHANGE'::character varying, 'TAX'::character varying, 'GOVERNMENT_FEE'::character varying, 'REGULATORY_FEE'::character varying, 'COMPLIANCE_FEE'::character varying, 'AUDIT_FEE'::character varying, 'ACCREDITATION_FEE'::character varying, 'CERTIFICATION_MAINTENANCE'::character varying, 'QUALITY_ASSURANCE'::character varying, 'RISK_MANAGEMENT'::character varying, 'EMERGENCY_FUND'::character varying, 'DISASTER_RECOVERY'::character varying, 'BUSINESS_CONTINUITY'::character varying, 'OTHER'::character varying])::text[])),
    mutually_exclusive_fees      json,
    prerequisite_fees            json,
    required_documents           json,
    status                       varchar(255)   not null
        constraint custom_fees_status_check
            check ((status)::text = ANY
                   ((ARRAY ['DRAFT'::character varying, 'PENDING_APPROVAL'::character varying, 'APPROVED'::character varying, 'ACTIVE'::character varying, 'INACTIVE'::character varying, 'SUSPENDED'::character varying, 'CANCELLED'::character varying, 'EXPIRED'::character varying, 'ARCHIVED'::character varying])::text[]))
);

alter table custom_fees
    owner to genixo;

create table price_history
(
    advance_notice_days     integer,
    affected_students_count integer,
    can_rollback            boolean,
    change_amount           numeric(19, 2),
    change_percentage       double precision,
    effective_date          date,
    is_active               boolean,
    new_value               numeric(19, 2),
    old_value               numeric(19, 2),
    parents_notified        boolean,
    revenue_impact          numeric(19, 2),
    approved_at             timestamp(6),
    approved_by             bigint,
    change_date             timestamp(6) not null,
    changed_by_user_id      bigint       not null
        constraint fk833ge3xpdfnhf8af7btuamnbd
            references users,
    created_at              timestamp(6),
    created_by              bigint,
    id                      bigint generated by default as identity
        primary key,
    notification_date       timestamp(6),
    rollback_deadline       timestamp(6),
    rolled_back_at          timestamp(6),
    rolled_back_by          bigint,
    school_pricing_id       bigint       not null
        constraint fkhsqd9qiga5xrnhhtqf3hle7b0
            references school_pricing,
    updated_at              timestamp(6),
    updated_by              bigint,
    change_notes            text,
    change_type             varchar(255) not null
        constraint price_history_change_type_check
            check ((change_type)::text = ANY
                   ((ARRAY ['INCREASE'::character varying, 'DECREASE'::character varying, 'NEW_FEE'::character varying, 'REMOVED_FEE'::character varying, 'RESTRUCTURE'::character varying, 'SEASONAL_ADJUSTMENT'::character varying, 'INFLATION_ADJUSTMENT'::character varying, 'MARKET_ADJUSTMENT'::character varying, 'PROMOTION'::character varying, 'CORRECTION'::character varying, 'POLICY_CHANGE'::character varying, 'COMPETITIVE_RESPONSE'::character varying, 'COST_ADJUSTMENT'::character varying, 'QUALITY_IMPROVEMENT'::character varying, 'SERVICE_ENHANCEMENT'::character varying, 'REGULATORY_CHANGE'::character varying, 'OTHER'::character varying])::text[])),
    competitive_analysis    text,
    field_name              varchar(255) not null,
    notification_method     varchar(255),
    reason                  varchar(255) not null,
    rollback_reason         varchar(255)
);

alter table price_history
    owner to genixo;

create table search_logs
(
    abandoned_search        boolean,
    autocomplete_used       boolean,
    clicked_result_position integer,
    confidence_score        double precision,
    is_active               boolean,
    page_number             integer,
    refined_search          boolean,
    response_time_ms        integer,
    results_count           integer,
    results_per_page        integer,
    search_radius_km        integer,
    time_to_click_seconds   integer,
    zero_results            boolean,
    clicked_school_id       bigint,
    created_at              timestamp(6),
    created_by              bigint,
    id                      bigint generated by default as identity
        primary key,
    search_time             timestamp(6) not null,
    updated_at              timestamp(6),
    updated_by              bigint,
    user_id                 bigint
        constraint fkaxl330wos94o6v1a13oyvgqr0
            references users,
    cleaned_query           varchar(255),
    device_type             varchar(255)
        constraint search_logs_device_type_check
            check ((device_type)::text = ANY
                   ((ARRAY ['DESKTOP'::character varying, 'MOBILE'::character varying, 'TABLET'::character varying, 'TV'::character varying, 'WEARABLE'::character varying, 'UNKNOWN'::character varying])::text[])),
    experiment_id           varchar(255),
    filters_applied         json,
    ip_address              varchar(255),
    search_intent           varchar(255)
        constraint search_logs_search_intent_check
            check ((search_intent)::text = ANY
                   ((ARRAY ['INFORMATIONAL'::character varying, 'NAVIGATIONAL'::character varying, 'TRANSACTIONAL'::character varying, 'COMMERCIAL'::character varying, 'LOCAL'::character varying, 'ACADEMIC'::character varying, 'PRICE_COMPARISON'::character varying, 'REVIEW_SEEKING'::character varying, 'CONTACT'::character varying, 'UNCLEAR'::character varying])::text[])),
    search_query            varchar(255) not null,
    search_type             varchar(255) not null
        constraint search_logs_search_type_check
            check ((search_type)::text = ANY
                   ((ARRAY ['GENERAL'::character varying, 'SCHOOL_NAME'::character varying, 'LOCATION'::character varying, 'INSTITUTION_TYPE'::character varying, 'PRICE_RANGE'::character varying, 'AGE_GROUP'::character varying, 'CURRICULUM'::character varying, 'LANGUAGE'::character varying, 'FACILITIES'::character varying, 'ADVANCED'::character varying])::text[])),
    session_id              varchar(255),
    sort_order              varchar(255),
    suggestion_selected     varchar(255),
    user_agent              varchar(255),
    user_location           varchar(255),
    variant                 varchar(255)
);

alter table search_logs
    owner to genixo;

create table survey_responses
(
    cleanliness_rating      double precision,
    communication_rating    double precision,
    completion_time_seconds integer,
    facilities_rating       double precision,
    is_active               boolean,
    likelihood_to_enroll    integer,
    overall_rating          double precision,
    reminder_count          integer,
    staff_rating            double precision,
    would_recommend         boolean,
    appointment_id          bigint
        constraint fkos6ix4esexgt3uyxppadxnscu
            references appointments,
    completed_at            timestamp(6),
    created_at              timestamp(6),
    created_by              bigint,
    id                      bigint generated by default as identity
        primary key,
    invitation_opened_at    timestamp(6),
    invitation_sent_at      timestamp(6),
    last_reminder_sent_at   timestamp(6),
    respondent_user_id      bigint
        constraint fkjeq0vwamj61e1gp7rqykjnoxm
            references users,
    school_id               bigint       not null
        constraint fk73o1wifu9eu0549wg2e6mnuu0
            references schools,
    started_at              timestamp(6) not null,
    submitted_at            timestamp(6),
    survey_id               bigint       not null
        constraint fkg5uul15qxrqgdet2fa3wvdhj8
            references surveys,
    updated_at              timestamp(6),
    updated_by              bigint,
    browser_info            json,
    complaints              text,
    device_info             json,
    general_feedback        text,
    ip_address              varchar(255),
    respondent_email        varchar(255),
    respondent_name         varchar(255),
    respondent_phone        varchar(255),
    response_token          varchar(255) not null
        unique,
    status                  varchar(255) not null
        constraint survey_responses_status_check
            check ((status)::text = ANY
                   ((ARRAY ['INVITED'::character varying, 'STARTED'::character varying, 'IN_PROGRESS'::character varying, 'COMPLETED'::character varying, 'SUBMITTED'::character varying, 'EXPIRED'::character varying, 'ABANDONED'::character varying, 'DELETED'::character varying])::text[])),
    suggestions             text,
    user_agent              text
);

alter table survey_responses
    owner to genixo;

create table survey_question_responses
(
    boolean_response      boolean,
    confidence_level      integer,
    date_response         date,
    is_active             boolean,
    number_response       double precision,
    rating_response       integer,
    response_order        integer,
    response_time_seconds integer,
    revision_count        integer,
    time_response         time(6),
    was_skipped           boolean,
    created_at            timestamp(6),
    created_by            bigint,
    datetime_response     timestamp(6),
    file_size             bigint,
    id                    bigint generated by default as identity
        primary key,
    question_id           bigint not null
        constraint fk988n34c80qbiousjcvsd6e8gu
            references survey_questions,
    survey_response_id    bigint not null
        constraint fkge6uon6wy2ye3d6kn5f6p9ytx
            references survey_responses,
    updated_at            timestamp(6),
    updated_by            bigint,
    choice_responses      json,
    file_name             varchar(255),
    file_type             varchar(255),
    file_url              varchar(255),
    matrix_responses      json,
    other_text            varchar(255),
    skip_reason           varchar(255),
    text_response         text
);

alter table survey_question_responses
    owner to genixo;

create table survey_ratings
(
    is_active          boolean,
    is_flagged         boolean,
    is_public          boolean,
    is_verified        boolean,
    rating_value       integer      not null,
    weight             double precision,
    created_at         timestamp(6),
    created_by         bigint,
    flagged_at         timestamp(6),
    flagged_by         bigint,
    id                 bigint generated by default as identity
        primary key,
    school_id          bigint       not null
        constraint fkcggnvvljg2t7lt4pwavk92t5m
            references schools,
    survey_response_id bigint
        constraint fkgnx531iy0amhkwtvpodts2fpl
            references survey_responses,
    updated_at         timestamp(6),
    updated_by         bigint,
    verified_at        timestamp(6),
    verified_by        bigint,
    flag_reason        varchar(255),
    moderator_notes    varchar(255),
    rating_category    varchar(255) not null
        constraint survey_ratings_rating_category_check
            check ((rating_category)::text = ANY
                   ((ARRAY ['OVERALL_SATISFACTION'::character varying, 'CLEANLINESS'::character varying, 'STAFF_FRIENDLINESS'::character varying, 'FACILITIES'::character varying, 'COMMUNICATION'::character varying, 'PROFESSIONALISM'::character varying, 'VALUE_FOR_MONEY'::character varying, 'RECOMMENDATION'::character varying, 'ACADEMIC_QUALITY'::character varying, 'INFRASTRUCTURE'::character varying, 'EXTRACURRICULAR'::character varying, 'SAFETY'::character varying, 'TRANSPORTATION'::character varying, 'CAFETERIA'::character varying, 'TECHNOLOGY'::character varying, 'CUSTOM'::character varying])::text[])),
    rating_text        varchar(255)
);

alter table survey_ratings
    owner to genixo;

create table token
(
    expired    boolean not null,
    revoked    boolean not null,
    id         bigint  not null
        primary key,
    user_id    bigint
        constraint fkj8rfw4x0wjjyibfqq566j4qng
            references users,
    token      varchar(40000)
        unique,
    token_type varchar(255)
        constraint token_token_type_check
            check ((token_type)::text = 'BEARER'::text)
);

alter table token
    owner to genixo;

create table user_institution_access
(
    is_active   boolean,
    created_at  timestamp(6),
    created_by  bigint,
    entity_id   bigint       not null,
    expires_at  timestamp(6),
    granted_at  timestamp(6) not null,
    id          bigint generated by default as identity
        primary key,
    updated_at  timestamp(6),
    updated_by  bigint,
    user_id     bigint       not null
        constraint fk2e1vtsukjcc4odfoosoid1axb
            references users,
    access_type varchar(255) not null
        constraint user_institution_access_access_type_check
            check ((access_type)::text = ANY
                   ((ARRAY ['BRAND'::character varying, 'CAMPUS'::character varying, 'SCHOOL'::character varying])::text[]))
);

alter table user_institution_access
    owner to genixo;

create table user_roles
(
    is_active  boolean,
    created_at timestamp(6),
    created_by bigint,
    expires_at timestamp(6),
    id         bigint generated by default as identity
        primary key,
    updated_at timestamp(6),
    updated_by bigint,
    user_id    bigint not null
        constraint fkhfh9dx7w3ubf1co1vdev94g3f
            references users,
    role       varchar(255)
        constraint user_roles_role_check
            check ((role)::text = ANY
                   ((ARRAY ['USER'::character varying, 'ADMIN'::character varying, 'CANDIDATE'::character varying, 'COMPANY'::character varying])::text[])),
    role_level varchar(255)
        constraint user_roles_role_level_check
            check ((role_level)::text = ANY
                   ((ARRAY ['BRAND'::character varying, 'CAMPUS'::character varying, 'SCHOOL'::character varying, 'SYSTEM'::character varying])::text[]))
);

alter table user_roles
    owner to genixo;

create table user_role_departments
(
    user_role_id bigint       not null
        constraint fklum5hqvko3f2dhg2ygadtdabq
            references user_roles,
    departments  varchar(255) not null
        constraint user_role_departments_departments_check
            check ((departments)::text = ANY
                   ((ARRAY ['AUTHOR'::character varying, 'GRADER'::character varying, 'SUPERVISOR'::character varying, 'MANAGEMENT'::character varying, 'IT'::character varying, 'AUTHOR_REVIEWER'::character varying, 'ADMIN'::character varying, 'REVIEWER'::character varying])::text[])),
    primary key (user_role_id, departments)
);

alter table user_role_departments
    owner to genixo;

create table user_role_permissions
(
    user_role_id bigint       not null
        constraint fk381nr6ngkxnwjeva9ny12i8m5
            references user_roles,
    permissions  varchar(255) not null
        constraint user_role_permissions_permissions_check
            check ((permissions)::text = ANY
                   ((ARRAY ['APPROVAL'::character varying, 'USER_CREATE'::character varying, 'GENERAL'::character varying, 'FINANCE_OPERATION'::character varying, 'ACCOUNTING_OPERATION'::character varying, 'DELIVERY_OPERATION'::character varying, 'CUSTOMER_OPERATION'::character varying, 'OFFER_OPERATION'::character varying, 'ORDER_OPERATION'::character varying, 'SUPPLIER_OPERATION'::character varying, 'TRANSPORTATION_OPERATION'::character varying, 'DELIVERY_DOCUMENT'::character varying, 'SETTING'::character varying])::text[])),
    primary key (user_role_id, permissions)
);

alter table user_role_permissions
    owner to genixo;

create table visitor_logs
(
    anonymized                  boolean,
    clicked_directions          boolean,
    clicked_email               boolean,
    clicked_phone               boolean,
    clicked_social_media        boolean,
    consent_given               boolean,
    dom_content_loaded_ms       integer,
    downloaded_brochure         boolean,
    exit_page                   boolean,
    first_paint_ms              integer,
    is_active                   boolean,
    is_bot                      boolean,
    is_bounce                   boolean,
    is_new_visitor              boolean,
    largest_contentful_paint_ms integer,
    latitude                    double precision,
    longitude                   double precision,
    page_depth                  integer,
    page_load_time_ms           integer,
    requested_appointment       boolean,
    scroll_depth_percentage     integer,
    sent_message                boolean,
    time_on_page_seconds        integer,
    viewed_gallery              boolean,
    brand_id                    bigint
        constraint fkqk6tu8ihbe5itbwjist6ad8ih
            references brands,
    campus_id                   bigint
        constraint fk2adf6sc2w84e1wml4lgqufnea
            references campuses,
    created_at                  timestamp(6),
    created_by                  bigint,
    id                          bigint generated by default as identity
        primary key,
    school_id                   bigint
        constraint fkc4enkrrq1x2226x8y3o3plbbj
            references schools,
    updated_at                  timestamp(6),
    updated_by                  bigint,
    user_id                     bigint
        constraint fkfqvgix2tet18tc3eq1mui5tg3
            references users,
    visit_time                  timestamp(6) not null,
    bot_name                    varchar(255),
    browser_name                varchar(255),
    browser_version             varchar(255),
    city                        varchar(255),
    country                     varchar(255),
    device_type                 varchar(255)
        constraint visitor_logs_device_type_check
            check ((device_type)::text = ANY
                   ((ARRAY ['DESKTOP'::character varying, 'MOBILE'::character varying, 'TABLET'::character varying, 'TV'::character varying, 'WEARABLE'::character varying, 'UNKNOWN'::character varying])::text[])),
    ip_address                  varchar(255) not null,
    language                    varchar(255),
    operating_system            varchar(255),
    page_title                  varchar(255),
    page_url                    varchar(255) not null,
    referrer_url                varchar(255),
    region                      varchar(255),
    screen_resolution           varchar(255),
    search_keywords             varchar(255),
    session_id                  varchar(255) not null,
    timezone                    varchar(255),
    traffic_source              varchar(255)
        constraint visitor_logs_traffic_source_check
            check ((traffic_source)::text = ANY
                   ((ARRAY ['DIRECT'::character varying, 'ORGANIC_SEARCH'::character varying, 'PAID_SEARCH'::character varying, 'SOCIAL_MEDIA'::character varying, 'EMAIL'::character varying, 'REFERRAL'::character varying, 'AFFILIATE'::character varying, 'DISPLAY_ADS'::character varying, 'VIDEO_ADS'::character varying, 'PUSH_NOTIFICATION'::character varying, 'SMS'::character varying, 'QR_CODE'::character varying, 'PRINT_MEDIA'::character varying, 'RADIO'::character varying, 'TV'::character varying, 'OUTDOOR'::character varying, 'WORD_OF_MOUTH'::character varying, 'OTHER'::character varying, 'UNKNOWN'::character varying])::text[])),
    user_agent                  text,
    utm_campaign                varchar(255),
    utm_content                 varchar(255),
    utm_medium                  varchar(255),
    utm_source                  varchar(255),
    utm_term                    varchar(255),
    visitor_id                  varchar(255)
);

alter table visitor_logs
    owner to genixo;

